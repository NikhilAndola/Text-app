{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","word","alert","className","type","role","toLowerCase","charAt","toUpperCase","slice","msg","Navbar","mode","href","title","id","onClick","toggleMode","htmlFor","defaultProps","aboutText","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","showAlert","document","getElementById","select","navigator","clipboard","writeText","split","join","length","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4f3c5275.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Alert(props) {\n\n        const capitalize = (word) => {\n            const lower = word.toLowerCase();\n            return lower.charAt(0).toUpperCase() + word.slice(1);\n        }\n\n    return (\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n            <strong> {capitalize(props.alert.type)} </strong> : {props.alert.msg}\n        </div>\n    )\n}\n\nexport default Alert\n","import React from 'react'\nimport PropTypes from 'prop-types'\n// import { Link } from 'react-router-dom';\n\n// React allows us to pass information to a Component using something called props (stands for properties). Props are basically kind of global variable or object Passing and Accessing props. We can pass props to any component as we declare attributes for any HTML tag.\n\n//This is a react function based component/ ----------------//\nexport default function Navbar(props) {\nreturn (\n\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}` }>\n  <div className=\"container-fluid\">\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\n    {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n        </li>\n        {/* <li className=\"nav-item\">\n          <a className=\"nav-link\" href=\"/About\">{props.aboutText}</a>\n          <Link className=\"nav-link\" to=\"/About\">{props.aboutText}</Link>\n        </li> */}\n      </ul>\n      {/* <form className=\"d-flex\">\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\n      </form> */}\n      <div className={`form-check form-switch text-${props.mode === \"light\"? 'dark': 'light'}`}>\n          <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.mode} Mode</label>\n      </div>\n      \n    </div>\n  </div>\n</nav>\n\n    );\n}\n\n\n// Below is used to set type of the prop. whether it is a (number, string, bool, array, object or etc)\n\nNavbar.propTypes = {\n    // title: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    aboutText: PropTypes.string.isRequired\n}\n\n//Used to set the default value in case no value is passed to the props.\nNavbar.defaultProps = {\n    title: \"set title here\",\n    aboutText: \"About\"\n};","// import React from 'react';\nimport React, { useState } from 'react';\n\nfunction TextForm(props) {\n    const handleUpClick = () => {\n        // console.log(\"Uppercase was clicked\" + text);\n        let newText = text.toUpperCase();\n        setText(newText);\n        props.showAlert(\"Converted to uppercase!\", \"success\");\n    }\n    \n    const handleLowClick = () => {\n        let newText = text.toLowerCase();\n        setText(newText);\n        props.showAlert(\"Converted to lowercase!\", \"success\");\n    }\n\n    const clear = () => {\n        let newText = \"\";\n        setText(newText);  \n        props.showAlert(\"Text Cleared\", \"success\");\n    }\n\n    const handleOnChange = (event) => {\n        // console.log(\"On Change\");\n        setText(event.target.value);\n    }\n\n    const handleCopy = () => {\n        let text = document.getElementById(\"myBox\");\n        text.select(); //The HTMLInputElement.select() method selects all the text in a <textarea> element or in an <input> element that includes a text field.\n        navigator.clipboard.writeText(text.value);\n        props.showAlert(\"Copied to clipboard\", \"success\");\n    }\n\n    const handleExtraSpaces = () => {\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"));\n        props.showAlert(\"Removed extra spaces\", \"success\");\n    }\n\n    const [text, setText] = useState('');  \n    // text = \"Mango and orange\";  // Wrong way to change the state.\n    // setText(\"Mango and orange\");  // Correct way to change the state.\n\nreturn (\n    <>\n    <div className=\"container\" style={{color: props.mode === \"dark\"? 'white': '#042743'}}>\n        <h1>{props.heading}</h1>\n        <div className=\"mb-3\">\n        {/* <label htmlFor=\"myBox\" className=\"form-label\">Example textarea</label> */}\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode === \"dark\"? 'grey': 'white', color: props.mode === \"dark\"? 'white': '#042743'}} id=\"myBox\" rows=\"8\"></textarea>\n        </div>\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\n        <button className=\"btn btn-primary mx-2\" onClick={handleLowClick}>Convert to Lowercase</button>\n        <button className=\"btn btn-primary mx-2\" onClick={clear}>Clear</button>\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy</button>\n        <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Remove Extra Space</button>\n    </div>\n    <div className=\"container my-3\" style={{color: props.mode === \"dark\"? 'white': '#042743'}}>\n        <h1>Your text summary</h1>\n        <p> {text.split(\" \").length} words and {text.length} characters</p>\n        <p> {0.008 * text.split(\" \").length} Minutes to read</p>\n        <h3>Preview</h3>\n        <p>{text.length>0? text:\"Enter something in the text box  to preview it  here\"}</p>\n    </div>\n    </>\n    )\n}\n\nexport default TextForm;","// import logo from './logo.svg';\nimport React, { useState } from 'react';\nimport './App.css';\n// import About from './components/About';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\n// import About from \"./components/About\";\nimport TextForm from \"./components/TextForm\";\n// import { \n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\n\n  const [mode, setMode] = useState(\"light\"); // Whether dark mode is enabled or not\n \n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n      setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(()=>{\n        setAlert(null);\n      },1500) \n  }\n\n  const toggleMode = ()=> {\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enabled\",\"success\");\n      document.title = \"TextUtils - Dark\";\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\",\"success\");\n      document.title = \"TextUtils - Light\";\n    }\n\n  }\n  \n  return (\n    <>\n        {/* <Navbar title=\"TextUtils\" aboutText=\"AboutUs\"/> */}\n        {/* <Navbar/> */}\n\n      {/* <Router> */}\n        <Navbar title=\"TextApp\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert}/>\n        <div className=\"container my-3 \">\n\n          {/* <Switch> */}\n            {/* /users --> component 1\n            /users/home --> component 2 */}\n            {/* Use exact with the path as react uses partial match so using exact solves the issue. */}\n            {/* <Route exact path=\"/About\"> */}\n              {/* <About /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/\"> */}\n            <TextForm showAlert={showAlert} heading=\"Enter the text to display\" mode={mode}/> \n            {/* </Route> */}\n          {/* </Switch> */}\n\n        </div>\n      {/* </Router>     */}\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n \nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}